import java.awt.Color;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Tom
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Interface() {
        //Initialisation de la Jtable
        initComponents();
        CreateColumns();

        //Gestion des boutons actifs 
        Enregistrer.setEnabled(false);
        Annuler.setEnabled(false);

        //Gestion du panneau d'affichage
        Panneau.setText("SAISIR UN NOUVEAU VOL :");
    }

    final void CreateColumns() {
        tblmodel = (DefaultTableModel) Table.getModel();
        tblmodel.addColumn("Numéro_Vol");
        tblmodel.addColumn("Nom_Compagnie");
        tblmodel.addColumn("Date_Départ");
        tblmodel.addColumn("Ville_Arrivée");
        tblmodel.addColumn("Nombre_Passagers");
        tblmodel.addColumn("Nombre_Personnel");
        tblmodel.addColumn("Total_Personnes");
        tblmodel.addColumn("Vol_Direct");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Numvol = new javax.swing.JTextField();
        NomComp = new javax.swing.JTextField();
        VilleArrivee = new javax.swing.JTextField();
        Ajouter = new javax.swing.JButton();
        Enregistrer = new javax.swing.JButton();
        Quitter = new javax.swing.JButton();
        Import = new javax.swing.JButton();
        Export = new javax.swing.JButton();
        Supprimer = new javax.swing.JButton();
        Modifier = new javax.swing.JButton();
        Jour = new javax.swing.JTextField();
        Mois = new javax.swing.JTextField();
        Annee = new javax.swing.JTextField();
        NbPass = new javax.swing.JTextField();
        NbPers = new javax.swing.JTextField();
        Voldirect = new javax.swing.JRadioButton();
        Annuler = new javax.swing.JButton();
        Panneau = new javax.swing.JLabel();
        RechercheText = new javax.swing.JTextField();
        RechercheLabel = new javax.swing.JLabel();
        DatedepLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        RechercheNumVolText = new javax.swing.JTextField();
        Select = new javax.swing.JComboBox<>();
        FiltreDirect = new javax.swing.JRadioButton();
        FiltreEscale = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AIRPORT DATA BASE");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        this.getContentPane().setBackground(Color.getHSBColor(203, 43, 91));
        Table.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{}
        ));
        jScrollPane1.setViewportView(Table);

        Numvol.setText("Numéro de vol");
        Numvol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NumvolMouseClicked(evt);
            }
        });
        Numvol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumvolActionPerformed(evt);
            }
        });

        NomComp.setText("Nom Compagnie");
        NomComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NomCompMouseClicked(evt);
            }
        });

        VilleArrivee.setText("Ville d'arrivée");
        VilleArrivee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VilleArriveeMouseClicked(evt);
            }
        });

        Ajouter.setText("Ajouter");
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });

        Enregistrer.setText("Enregistrer");
        Enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnregistrerActionPerformed(evt);
            }
        });

        Quitter.setText("Quitter");
        Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitterActionPerformed(evt);
            }
        });

        Import.setText("Import");
        Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportActionPerformed(evt);
            }
        });

        Export.setText("Export");
        Export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExportActionPerformed(evt);
            }
        });

        Supprimer.setText("Supprimer");
        Supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerActionPerformed(evt);
            }
        });

        Modifier.setText("Modifier");
        Modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierActionPerformed(evt);
            }
        });

        Jour.setText("JJ");
        Jour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JourMouseClicked(evt);
            }
        });
        Jour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JourActionPerformed(evt);
            }
        });

        Mois.setText("MM");
        Mois.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MoisMouseClicked(evt);
            }
        });
        Mois.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoisActionPerformed(evt);
            }
        });

        Annee.setText("AAAA");
        Annee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnneeMouseClicked(evt);
            }
        });

        NbPass.setText("Nombre de Passagers");
        NbPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NbPassMouseClicked(evt);
            }
        });
        NbPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NbPassActionPerformed(evt);
            }
        });

        NbPers.setText("Nombre de Personnel");
        NbPers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NbPersMouseClicked(evt);
            }
        });
        NbPers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NbPersActionPerformed(evt);
            }
        });

        Voldirect.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        Voldirect.setText("Vol_Direct");
        Voldirect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoldirectActionPerformed(evt);
            }
        });

        Annuler.setText("Annuler");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });

        Panneau.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        Panneau.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Panneau.setText("PANNEAU");

        RechercheText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechercheTextActionPerformed(evt);
            }
        });
        RechercheText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RechercheTextKeyReleased(evt);
            }
        });

        RechercheLabel.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        RechercheLabel.setText("RECHERCHE :");

        DatedepLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        DatedepLabel.setText("DATE DE DEPART");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabel1.setText("NUM DE VOL :");

        RechercheNumVolText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RechercheNumVolTextActionPerformed(evt);
            }
        });
        RechercheNumVolText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RechercheNumVolTextKeyReleased(evt);
            }
        });

        Select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Général", "Nom_Compagnie", "Date_Depart", "Ville_Arrivee", "Nb_Passagers", "Nb_Personnel", "Total_Personnes"}));

        FiltreDirect.setText("Vols directs");
        FiltreDirect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltreDirectActionPerformed(evt);
            }
        });

        FiltreEscale.setText("Vols avec escale");
        FiltreEscale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltreEscaleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addComponent(jLabel1)
                                                                .addGap(8, 8, 8)
                                                                .addComponent(RechercheNumVolText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(FiltreDirect)
                                                                .addGap(12, 12, 12)
                                                                .addComponent(FiltreEscale)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(Import)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(Export))
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                .addGap(41, 41, 41)
                                                                .addComponent(RechercheLabel)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(RechercheText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                                                                .addComponent(Supprimer)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(Modifier)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(Jour, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(Mois, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(Annee, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(DatedepLabel))
                                                                .addComponent(Voldirect)
                                                                .addComponent(Numvol)
                                                                .addComponent(NomComp)
                                                                .addComponent(VilleArrivee)
                                                                .addComponent(NbPass, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addGap(17, 17, 17)
                                                                        .addComponent(Ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(12, 12, 12)
                                                                        .addComponent(Enregistrer)
                                                                        .addGap(12, 12, 12)
                                                                        .addComponent(Annuler)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(32, 32, 32)
                                                                .addComponent(Panneau, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(NbPers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(Quitter, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Export)
                                        .addComponent(Import)
                                        .addComponent(RechercheNumVolText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(FiltreEscale)
                                        .addComponent(FiltreDirect))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGap(43, 43, 43)
                                                                .addComponent(Quitter))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(RechercheLabel)
                                                                        .addComponent(RechercheText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(Modifier)
                                                                        .addComponent(Supprimer)
                                                                        .addComponent(Select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(33, 33, 33))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(Panneau)
                                                .addGap(18, 18, 18)
                                                .addComponent(Numvol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(NomComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(Jour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Mois, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(DatedepLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(VilleArrivee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(NbPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(NbPers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Voldirect)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(Ajouter)
                                                        .addComponent(Enregistrer)
                                                        .addComponent(Annuler))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JourActionPerformed

    }//GEN-LAST:event_JourActionPerformed

    private void MoisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoisActionPerformed
    }//GEN-LAST:event_MoisActionPerformed

    private void QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitterActionPerformed
        int reponse = JOptionPane.showConfirmDialog(ecran, "Etes vous sur de vouloir quitter?");
        if (reponse == JOptionPane.YES_OPTION) {
            System.exit(0);
        }

    }//GEN-LAST:event_QuitterActionPerformed

    private void NbPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NbPassActionPerformed
        
    }//GEN-LAST:event_NbPassActionPerformed

    private void NbPersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NbPersActionPerformed
       
    }//GEN-LAST:event_NbPersActionPerformed

    private void VoldirectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoldirectActionPerformed
       

    }//GEN-LAST:event_VoldirectActionPerformed

    private void NumvolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumvolActionPerformed
        
    }//GEN-LAST:event_NumvolActionPerformed

    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
        

        //Recuperation des données
        String NumeroVol = Numvol.getText();
        String NomCompagnie = NomComp.getText();
        String date = Jour.getText() + "/" + Mois.getText() + "/" + Annee.getText();
        String VilleArr = VilleArrivee.getText();
        int NbPassagers = Integer.parseInt(NbPass.getText());
        int NbPersonnel = Integer.parseInt(NbPers.getText());
        int NbTotal = NbPersonnel + NbPassagers;
        boolean bool = false;
        if (Voldirect.isSelected()) {
            bool = true;
        }

        tblmodel = (DefaultTableModel) Table.getModel();
        int res = 1;
        //Check présence numéro de vol le même jour
        //Parcours de toutes les lignes
        for (int r = 0; r < Table.getRowCount(); r++) {
            //Comparaison des valeurs renseignées avec les valeurs dans la base
            if (NumeroVol.equals(Table.getValueAt(r, 0)) && (date.equals(Table.getValueAt(r, 2)))) {
                res = -1;
            }
        }

        //check des valeurs obliagoires
        if (res == -1) {
            //Message d'erreur
            JOptionPane.showMessageDialog(this, "Vol déja renseigné dans la base", "ERREUR", JOptionPane.ERROR_MESSAGE);
        } else if ((NumeroVol.equals("")) || (NomCompagnie.equals("")) || (VilleArr.equals("")) || (NbPass.getText().equals("")) || (NbPers.getText().equals("")) || (Jour.getText().equals("")) || (Mois.getText().equals("") || (Annee.getText().equals("")))) {
            //Message d'erreur
            JOptionPane.showMessageDialog(this, "Informations manquantes", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
        } else {
            //Ajout des valeurs du formulaire dans le Table
            tblmodel.addRow(new Object[]{NumeroVol, NomCompagnie, date, VilleArr, NbPassagers, NbPersonnel, NbTotal, bool});

            //Reset de toutes les valeurs du formulaire
            Numvol.setText("Numéro de vol");
            NomComp.setText("Nom Compagnie");
            VilleArrivee.setText("Ville d'arrivée");
            Jour.setText("JJ");
            Mois.setText("MM");
            Annee.setText("AAAA");
            NbPass.setText("Nombre de Passagers");
            NbPers.setText("Nombre de Personnel");
            Voldirect.setSelected(false);

        }

    }//GEN-LAST:event_AjouterActionPerformed

    private void NumvolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NumvolMouseClicked
        if (Numvol.getText().equals("Numéro de vol")) {
            Numvol.setText(null);
        }
    }//GEN-LAST:event_NumvolMouseClicked

    private void NomCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NomCompMouseClicked
        if (NomComp.getText().equals("Nom Compagnie")) {
            NomComp.setText(null);
        }
    }//GEN-LAST:event_NomCompMouseClicked

    private void VilleArriveeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VilleArriveeMouseClicked
        if (VilleArrivee.getText().equals("Ville d'arrivée")) {
            VilleArrivee.setText(null);
        }
    }//GEN-LAST:event_VilleArriveeMouseClicked

    private void NbPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NbPassMouseClicked
        if (NbPass.getText().equals("Nombre de Passagers")) {
            NbPass.setText(null);
        }
    }//GEN-LAST:event_NbPassMouseClicked

    private void NbPersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NbPersMouseClicked
        if (NbPers.getText().equals("Nombre de Personnel")) {
            NbPers.setText(null);
        }
    }//GEN-LAST:event_NbPersMouseClicked

    private void SupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerActionPerformed
        int reponse = JOptionPane.showConfirmDialog(this, "Etes vous sur de vouloir supprimer cette ligne ?");
        if (reponse == JOptionPane.YES_OPTION) {
            tblmodel = (DefaultTableModel) Table.getModel();

            if (Table.getSelectedRowCount() == 1) {
                tblmodel.removeRow(Table.getSelectedRow());
            } else {
                JOptionPane.showMessageDialog(this, "Aucune ligne selectionée");
            }

        }

    }//GEN-LAST:event_SupprimerActionPerformed

    private void ModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierActionPerformed
        if (Table.getSelectedRow() == -1) //Message d'erreur si aucune ligne n'est selectionnée
        {
            JOptionPane.showMessageDialog(this, "Aucune ligne séléctionnée", "ERREUR", JOptionPane.ERROR_MESSAGE);
        } else {
            //Gestion des boutons
            Ajouter.setEnabled(false);
            Supprimer.setEnabled(false);
            Enregistrer.setEnabled(true);
            Annuler.setEnabled(true);

            //Desactivation de la table pour ne pas affecter les modifs à une autre ligne
            Table.setEnabled(false);

            //Gestion du panneau
            Panneau.setText("MODIFICATIONS A EFFECTUER :");

            //Recupération de toutes les données
            Numvol.setText(String.valueOf(Table.getValueAt(Table.getSelectedRow(), 0)));

            NomComp.setText((String.valueOf(Table.getValueAt(Table.getSelectedRow(), 1))));

            //Recuperation des 2 premieres lettres de la date 
            Jour.setText((String.valueOf(Table.getValueAt(Table.getSelectedRow(), 2))).substring(0, 2));

            //Recuperation des 2 lettres du mois lettres de la date 
            Mois.setText((String.valueOf(Table.getValueAt(Table.getSelectedRow(), 2))).substring(3, 5));

            //Recuperation des 4 lettres de l'année 
            Annee.setText((String.valueOf(Table.getValueAt(Table.getSelectedRow(), 2))).substring(6, 10));

            VilleArrivee.setText((String.valueOf(Table.getValueAt(Table.getSelectedRow(), 3))));

            NbPass.setText(String.valueOf(Table.getValueAt(Table.getSelectedRow(), 4)));

            NbPers.setText(String.valueOf(Table.getValueAt(Table.getSelectedRow(), 5)));

            if (Table.getValueAt(Table.getSelectedRow(), 7).equals(true)) {
                Voldirect.setSelected(true);
            } else {
                Voldirect.setSelected(false);
            }

        }
    }//GEN-LAST:event_ModifierActionPerformed

    private void EnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnregistrerActionPerformed

        int reponse = JOptionPane.showConfirmDialog(this, "Etes vous sur de vouloir apporter ces modifications ?");
        if (reponse == JOptionPane.YES_OPTION) {

            //Recuperation des données du tableau vers le formulaire
            String NumeroVol = Numvol.getText();
            String date = Jour.getText() + "/" + Mois.getText() + "/" + Annee.getText();
            String NomCompagnie = NomComp.getText();
            String VilleArr = VilleArrivee.getText();
            int NbPassagers = Integer.parseInt(NbPass.getText());
            int NbPersonnel = Integer.parseInt(NbPers.getText());

            //Check de toutes les informations avant modification
            int res = 1;
            for (int r = 0; r < Table.getRowCount(); r++) {
                //Comparaison des valeurs renseignées avec les valeurs dans la base sauf la ligne à modifier
                if (NumeroVol.equals(Table.getValueAt(r, 0)) && (date.equals(Table.getValueAt(r, 2))) && r != Table.getSelectedRow()) {
                    res = -1;
                }
            }
            if (res == -1) {
                //Message d'erreur
                JOptionPane.showMessageDialog(this, "Vol déja renseigné dans la base", "ERREUR", JOptionPane.ERROR_MESSAGE);

            } else if ((NumeroVol.equals("")) || (NomCompagnie.equals("")) || (VilleArr.equals("")) || (NbPass.getText().equals("")) || (NbPers.getText().equals("")) || (Jour.getText().equals("")) || (Mois.getText().equals("") || (Annee.getText().equals("")))) {
                //Message d'erreur
                JOptionPane.showMessageDialog(this, "Informations manquantes", "INFORMATION", JOptionPane.INFORMATION_MESSAGE);
            } else {
                //Affectation du formulaire à la Table
                Table.setValueAt(NumeroVol, Table.getSelectedRow(), 0);
                Table.setValueAt(NomCompagnie, Table.getSelectedRow(), 1);
                Table.setValueAt(date, Table.getSelectedRow(), 2);
                Table.setValueAt(VilleArr, Table.getSelectedRow(), 3);
                Table.setValueAt(NbPassagers, Table.getSelectedRow(), 4);
                Table.setValueAt(NbPersonnel, Table.getSelectedRow(), 5);
                Table.setValueAt(NbPersonnel + NbPassagers, Table.getSelectedRow(), 6);

                if (Voldirect.isSelected()) {
                    Table.setValueAt(true, Table.getSelectedRow(), 7);
                } else {
                    Table.setValueAt(false, Table.getSelectedRow(), 7);
                }

                //Actualisation des données dans notre model 
                tblmodel.fireTableDataChanged();

                //Gestion du panneau
                Panneau.setText("SAISIR UN NOUVEAU VOL :");

                //Reset des information du formulaire
                Numvol.setText("Numéro de vol");
                NomComp.setText("Nom Compagnie");
                VilleArrivee.setText("Ville d'arrivée");
                Jour.setText("JJ");
                Mois.setText("MM");
                Annee.setText("AAAA");
                NbPass.setText("Nombre de Passagers");
                NbPers.setText("Nombre de Personnel");
                Voldirect.setSelected(false);

                //Gestion de l'activation des boutons
                Annuler.setEnabled(false);
                Enregistrer.setEnabled(false);
                Ajouter.setEnabled(true);
                Supprimer.setEnabled(true);

                //Réactivation de la selection de la table
                Table.setEnabled(true);
            }
        }

    }//GEN-LAST:event_EnregistrerActionPerformed

    private void JourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JourMouseClicked
        if (Jour.getText().equals("JJ")) {
            Jour.setText(null);
        }
    }//GEN-LAST:event_JourMouseClicked

    private void MoisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoisMouseClicked
        if (Mois.getText().equals("MM")) {
            Mois.setText(null);
        }
    }//GEN-LAST:event_MoisMouseClicked

    private void AnneeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnneeMouseClicked
        if (Annee.getText().equals("AAAA")) {
            Annee.setText(null);
        }
    }//GEN-LAST:event_AnneeMouseClicked

    private void ExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExportActionPerformed

        //Test présence d'informations dans la table
        if (Table.getRowCount() == 0) {
            JOptionPane.showMessageDialog(ecran, "Aucune ligne à exporter", "ERREUR", JOptionPane.ERROR_MESSAGE);
        } else {
            //Choix du fichier par l'utilisateur
            JFileChooser Filechoose = new JFileChooser();
            Filechoose.setDialogTitle("Indiquez ou enregistrer le fichier");
            int userSelection = Filechoose.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File Chemin = Filechoose.getSelectedFile();

                //Ecriture du fichier CSV
                try {
                    Export E = new Export(Chemin);
                    E.Ecrit(Table);
                } catch (IOException exception) {
                    JOptionPane.showMessageDialog(this, "Exportation impossible", "ERREUR", JOptionPane.ERROR_MESSAGE);

                }
            }

        }
    }//GEN-LAST:event_ExportActionPerformed

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerActionPerformed

        //Gestion des boutons actifs
        Enregistrer.setEnabled(false);
        Annuler.setEnabled(false);
        Ajouter.setEnabled(true);
        Supprimer.setEnabled(true);

        //Gestion du panneau
        Panneau.setText("SAISIR UN NOUVEAU VOL :");

        //Reset formulaire
        Numvol.setText("Numéro de vol");
        NomComp.setText("Nom Compagnie");
        VilleArrivee.setText("Ville d'arrivée");
        Jour.setText("JJ");
        Mois.setText("MM");
        Annee.setText("AAAA");
        NbPass.setText("Nombre de Passagers");
        NbPers.setText("Nombre de Personnel");
        Voldirect.setSelected(false);

    }//GEN-LAST:event_AnnulerActionPerformed

    private void RechercheTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechercheTextActionPerformed

    }//GEN-LAST:event_RechercheTextActionPerformed

    private void RechercheTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RechercheTextKeyReleased
        String filtre = RechercheText.getText();
        Recherche R = new Recherche(Table);

        //Cas de recherche général, utilisation du filtre sans index 
        if (Select.getSelectedItem().equals("Général")) {
            R.filtreRecherche(filtre);
        } //Cas de recherche dans une colonne en particulier
        else if (Select.getSelectedItem().equals("Nom_Compagnie")) {
            R.filtreIndex(filtre, 1);
        } else if (Select.getSelectedItem().equals("Date_Depart")) {
            R.filtreIndex(filtre, 2);
        } else if (Select.getSelectedItem().equals("Ville_Arrivee")) {
            R.filtreIndex(filtre, 3);
        } else if (Select.getSelectedItem().equals("Nb_Passagers")) {
            R.filtreIndex(filtre, 4);
        } else if (Select.getSelectedItem().equals("Nb_Personnel")) {
            R.filtreIndex(filtre, 5);
        } else if (Select.getSelectedItem().equals("Total_Personnes")) {
            R.filtreIndex(filtre, 6);
        }

    }//GEN-LAST:event_RechercheTextKeyReleased

    private void ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportActionPerformed
        //Choix du fichier par l'utilisateur
        Import I, J;
        JFileChooser Filechoose = new JFileChooser();
        Filechoose.setDialogTitle("Indiquez le fichier à importer");
        int userSelection = Filechoose.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File Chemin = Filechoose.getSelectedFile();

            //Cas : choix de suppression de la JTable déjà existante    
            int reponse = JOptionPane.showConfirmDialog(this, "Voulez vous écraser les données déja existantes ?");
            if (reponse == JOptionPane.YES_OPTION) {
                try {
                    //Suppression et import de la tabe déja existante
                    I = new Import(Chemin, this.Table);
                    I.Ecraser(Table);
                } catch (IOException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                }
            } //Cas : ajout de la table à une table existante
            else {
                try {
                    //Import de la nouvelle table en plus de ce qui est présent
                    J = new Import(Chemin, this.Table);
                    J.Importer(Table);
                } catch (IOException ex) {
                    Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }//GEN-LAST:event_ImportActionPerformed

    private void RechercheNumVolTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RechercheNumVolTextActionPerformed

    }//GEN-LAST:event_RechercheNumVolTextActionPerformed

    private void RechercheNumVolTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RechercheNumVolTextKeyReleased
        Recherche N = new Recherche(Table);
        String filtre = RechercheNumVolText.getText();
        N.filtreIndex(filtre, 0);
    }//GEN-LAST:event_RechercheNumVolTextKeyReleased

    private void FiltreDirectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltreDirectActionPerformed
        Recherche D = new Recherche(Table);
        if (FiltreDirect.isSelected()) {
            D.filtreIndex("true", 7);
            FiltreEscale.setEnabled(false);
        } else {
            D.filtreRecherche("");
            FiltreEscale.setEnabled(true);
        }
    }//GEN-LAST:event_FiltreDirectActionPerformed

    private void FiltreEscaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltreEscaleActionPerformed
        Recherche E = new Recherche(Table);
        if (FiltreEscale.isSelected()) {
            E.filtreIndex("false", 7);
            FiltreDirect.setEnabled(false);
        } else {
            E.filtreRecherche("");
            FiltreDirect.setEnabled(true);
        }
    }//GEN-LAST:event_FiltreEscaleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Interface().setVisible(true);
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ajouter;
    private javax.swing.JTextField Annee;
    private javax.swing.JButton Annuler;
    private javax.swing.JLabel DatedepLabel;
    private javax.swing.JButton Enregistrer;
    private javax.swing.JButton Export;
    private javax.swing.JRadioButton FiltreDirect;
    private javax.swing.JRadioButton FiltreEscale;
    private javax.swing.JButton Import;
    private javax.swing.JTextField Jour;
    private javax.swing.JButton Modifier;
    private javax.swing.JTextField Mois;
    private javax.swing.JTextField NbPass;
    private javax.swing.JTextField NbPers;
    private javax.swing.JTextField NomComp;
    private javax.swing.JTextField Numvol;
    private javax.swing.JLabel Panneau;
    private javax.swing.JButton Quitter;
    private javax.swing.JLabel RechercheLabel;
    private javax.swing.JTextField RechercheNumVolText;
    private javax.swing.JTextField RechercheText;
    private javax.swing.JComboBox<String> Select;
    private javax.swing.JButton Supprimer;
    private javax.swing.JTable Table;
    private javax.swing.JTextField VilleArrivee;
    private javax.swing.JRadioButton Voldirect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    public JFrame ecran;
    public DefaultTableModel tblmodel;
}